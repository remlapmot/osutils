% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/project-pipeline.R
\name{pipeline_action}
\alias{pipeline_action}
\title{Create action object}
\usage{
pipeline_action(
  name,
  run,
  arguments = NULL,
  needs = NULL,
  highly_sensitive = NULL,
  moderately_sensitive = NULL,
  ...
)
}
\arguments{
\item{name}{The name of the action. Must be a 1-d character}

\item{run}{The run command. Must be a 1-d character}

\item{arguments}{A character vector of arguments to be appended to the run command. Note that all arguments are parsed as strings / characters, so should be converted in-script if needed}

\item{needs}{A character vector of names of action dependencies}

\item{highly_sensitive}{A named character vector (or named list) of highly sensitive outputs from the action}

\item{moderately_sensitive}{A named character vector (or named list) of moderately sensitive outputs from the action}

\item{...}{other possible key:value pairs for action types with special parameters}
}
\value{
list
}
\description{
Create action object
}
\details{
A named list of length one containing all information needed to define the action and turn it into a yaml chunk.
This function can be used a a one-off to create single actions, or used to generate functions that create more specific actions with repeated patterns.
All action objects created by this function should be then put together using the \code{pipeline_list()} function,
for instance \code{pipeline_list(action(...), action(...), action(...), ...)}.
If combining 2 or more actions before passing to \code{pipeline_list()}, use the helper function \code{c_action()} (similar to \code{purrr::splice(...)} or \code{purrr::list_flatten(list(...))}).
This ensures that the list of actions has the correct structure. Do not use \code{list(...)} or similar!
}
